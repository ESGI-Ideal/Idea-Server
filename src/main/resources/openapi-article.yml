paths:
  /article:
    get:
      summary: articles list
      description: Return all articles from the system
      operationId: getArticles
      responses:
        '200':
          description: A list of articles
          content:
            application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Article'
                  uniqueItems: true
      tags:
        - article
    #put:
    #  #TODO
    post:
      summary: Add new Article
      description: ''
      operationId: newArticle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleContent'
          application/xml:
            schema:
              $ref: '#/components/schemas/ArticleContent'
      responses:
        '201':
          description: 'Create'
  /article/{id}:
    get:
      summary: informations on an article
      description: ''
      operationId: getArticle
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Datas on the article
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Article'
        default:
          description: Article's ID not exist
      tags:
        - article
    #patch:
    #  #TODO
    delete:
      description: ''
      operationId: deleteArticle
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: Delete completed
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Article'
        default:
          description: Article's ID not exist
      tags:
        - article
  /article/{id}/like:
    post:
      description: 'Vote of a user on an article'
      operationId: articleVote
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: True if user like-it, False if not
        required: true
        content:
          application/json:
            schema:
              type: boolean
              #additionalProperties: true
          #application/xml:
          #  schema:
          #    type: boolean
      responses:
        '200':
          description: Datas on the article
        default:
          description: Article's ID not exist
      tags:
        - article
      security:
        - OAuth2:
            - user
    delete:
      description: 'Remove the vote of a user on an article'
      operationId: articleUnvote
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Vote deleted
        default:
          description: Article's ID not exist
      tags:
        - article
      security:
        - OAuth2:
            - user

components:
  schemas:
    Article:
      allOf:
        - $ref: '#/components/schemas/ObjId'
        - $ref: '#/components/schemas/ArticleContent'
      xml:
        name: Article
    ArticleContent:
      type: object
      properties:
        name:
          type: string
        img:
          #$ref: "#/components/schemas/Image"
          type: integer
          format: int64
          nullable: true
        createdBy:
          #$ref: "#/components/schemas/User"
          type: integer
          format: int64
          readOnly: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        description:
          type: string
        price:
          type: number
          format: float
        customerRating:
          type: number
          format: float
          readOnly: true
          minimum: 0.0
          #exclusiveMinimim: false
          maximum: 1.0
          #exclusiveMaximim: false
          #multipleOf: 0.5
        customerRatingPositive:
          type: integer
          format: int32
          readOnly: true
          minimum: 0
          #exclusiveMinimim: false
        customerRatingNegative:
          type: integer
          format: int32
          readOnly: true
          minimum: 0
          #exclusiveMinimim: false
      xml:
        name: ArticleData
